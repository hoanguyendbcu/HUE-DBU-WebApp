@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer ViewLocalizer

@{
    var CurrentNumberFormat = new System.Globalization.CultureInfo("en-US");
    ViewData["Title"] = "Thua Thien Hue DBU - " + ViewLocalizer["Home"].Value;
       string lang = System.Globalization.CultureInfo.CurrentCulture.ToString();
}

 

<style>
    body {
        margin: 0;
        padding: 0;
    }

    #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
    }

    #menu {
        background: #fff;
        position: absolute;
        z-index: 1;
        top: 10px;
        right: 10px;
        border-radius: 3px;
        width: 120px;
        border: 1px solid rgba(0, 0, 0, 0.4);
        font-family: 'Open Sans', sans-serif;
    }

        #menu a {
            font-size: 11px;
            color: #404040;
            display: block;
            margin: 0;
            padding: 0;
            padding: 5px;
            text-decoration: none;
            border-bottom: 1px solid rgba(0, 0, 0, 0.25);
            text-align: center;
        }

            #menu a:last-child {
                border: none;
            }

            #menu a:hover {
                background-color: #f8f8f8;
                color: #404040;
            }

            #menu a.active {
                background-color: #3887be;
                color: #ffffff;
            }

                #menu a.active:hover {
                    background: #3074a4;
                }
    
</style>

  <!-- ======= Hero Section ======= -->
  <section id="hero">
    <div id="heroCarousel" data-bs-interval="5000" class="carousel slide carousel-fade" data-bs-ride="carousel">

      <div class="carousel-inner" role="listbox">

        <!-- Slide 1 -->
        <div class="carousel-item active" style="background-image: url(images/slide/slide-1.jpg);">
          <div class="carousel-container">
            <div class="carousel-content animate__animated animate__fadeInUp">
              <h2>@ViewLocalizer["lblHeroTop1"]</h2>
              <p>@ViewLocalizer["lblHeroTop2"]</p>
 
            </div>
          </div>
        </div>

        <!-- Slide 2 -->
        <div class="carousel-item" style="background-image: url(images/slide/slide-2.jpg);">
          <div class="carousel-container">
            <div class="carousel-content animate__animated animate__fadeInUp">
              <h2>@ViewLocalizer["lblHeroTop3"]</h2>
              <p>@ViewLocalizer["lblHeroTop4"]</p>
			  
            </div>
          </div>
        </div>

        <!-- Slide 3 -->
        <div class="carousel-item" style="background-image: url(images/slide/slide-3.jpg);">
          <div class="carousel-container">
            <div class="carousel-content animate__animated animate__fadeInUp">
               <h2>MỤC TIÊU</h2>
              <p>Giảm thiểu đến mức thấp nhất tai nạn bom mìn và ảnh hưởng của bom mìn, vật nổ đối với cộng đồng, hướng tới tỉnh “an toàn”.</p> 
            </div>
          </div>
        </div>

      </div>

      <a class="carousel-control-prev" href="#heroCarousel" role="button" data-bs-slide="prev">
        <span class="carousel-control-prev-icon bx bx-left-arrow" aria-hidden="true"></span>
      </a>

      <a class="carousel-control-next" href="#heroCarousel" role="button" data-bs-slide="next">
        <span class="carousel-control-next-icon bx bx-right-arrow" aria-hidden="true"></span>
      </a>

      <ol class="carousel-indicators" id="hero-carousel-indicators"></ol>

    </div>
  </section><!-- End Hero -->

 
    <!-- ======= Recent Blog Posts Section ======= -->
    <section id="newsposts" class="newsposts">

      <div class="container" data-aos="fade-up">

		<div class="sectiondbu-title">
          <h2>News</h2>
          <p>News & Event</p>
        </div>
		 <div class="newsposts-slider swiper">
		 
		 <div class="swiper-wrapper">
              @foreach (var item in Model)
                {
			        <div class="swiper-slide">
	 
				        <div class="post-box d-flex flex-column">
				          <div class="post-img"><img src="@Url.Content("~/images/News/" + @item.StrUrlImage)" class="img-fluid" alt="">  <span class="post-date">@item.DateUpdated.ToShortDateString()</span></div>	
				          <h5 class="post-title">
                                    
                                        @if (lang == "vi")
                                        {
                                            @item.Title  
                                        }
                                        else if (lang == "en")
                                        {
                                            @item.TitleEn 
                                        }
                             
                                </h5>
				            <hr>
					        <a  asp-controller="News" asp-action="DisplayNews" asp-route-slug="@item.Slug" class="readmore stretched-link"><span>Read More</span></a>
				        </div>				 
			        </div>
			  } 
			</div>

		  </div>
      </div>

    </section><!-- End Recent Blog Posts Section -->

 
    <!-- ======= Services Section ======= -->
    <section id="services" class="services">
      <div class="container">
        <div class="sectiondbu1-header">
          <h2>NỖ LỰC KHẮC PHỤC HẬU QUẢ BOM MÌN</h2>          
        </div> 

        <div class="row">
          <div class="col-lg-4 col-md-6">
            <div class="icon-box" data-aos="fade-up">
              <div class="icon"><i><img src="~/images/icon-web/images1.png" /></i></div>
              <h4 class="title" data-toggle="counter-up" ><a href=""> @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["areaCHA"])</a></h4>
              <p class="titlesub">@ViewLocalizer["String7"]  (m2)</p>
              <p class="description">@ViewLocalizer["String17"]</p>
            </div>
          </div>
          <div class="col-lg-4 col-md-6">
            <div class="icon-box" data-aos="fade-up" data-aos-delay="100">
              <div class="icon"><i><img src="~/images/icon-web/Clearance.png" /></i></div>
              <h4 class="title" data-toggle="counter-up" ><a href=""> @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["areaCLC"])</a></h4>
              <p class="titlesub">@ViewLocalizer["String8"]  (m2)</p>
              <p class="description">@ViewLocalizer["String18"]</p>
          </div>
          </div>
          <div class="col-lg-4 col-md-6">
            <div class="icon-box" data-aos="fade-up" data-aos-delay="200">
                 <div class="icon"><i><img src="~/images/icon-web/EOD.png" /></i></div>
              <h4 class="title" data-toggle="counter-up"><a href=""> @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["missonEOD"]) </a></h4>
              <p class="titlesub">@ViewLocalizer["String9"]</p>
              <p class="description">@ViewLocalizer["String19"]</p>
          
          </div>
          </div>
          <div class="col-lg-4 col-md-6">
            <div class="icon-box" data-aos="fade-up" data-aos-delay="200">
                 <div class="icon"><i><img src="~/images/icon-web/UXO.png" /></i></div>
              <h4 class="title" data-toggle="counter-up"><a href=""> @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["NoERW"])</a></h4>
              <p class="titlesub">@ViewLocalizer["String10"]</p>
              <p class="description">@ViewLocalizer["String20"]</p>             
          </div>
          </div>
          <div class="col-lg-4 col-md-6">
            <div class="icon-box" data-aos="fade-up" data-aos-delay="300">
               <div class="icon"><i><img src="~/images/icon-web/lifevest.png" /></i></div>
              <h4 class="title" data-toggle="counter-up"><a href=""> @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["NoVictimACC"] )</a></h4>
              <p class="titlesub">@ViewLocalizer["String21"]</p>
              <p class="description">@ViewLocalizer["String22"]</p>
          </div>
          </div>
          <div class="col-lg-4 col-md-6">
            <div class="icon-box" data-aos="fade-up" data-aos-delay="400">
              <div class="icon"><i><img src="~/images/icon-web/people1.png" /></i></div>
              <h4 class="title" data-toggle="counter-up"><a href=""> @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["NoMRE"])</a></h4>
              <p class="titlesub">@ViewLocalizer["String23"]</p>
              <p class="description">@ViewLocalizer["String24"]</p>
          </div>
          </div>
        </div>

      </div>
    </section><!-- End Services Section -->


 <section class="">
     <div class="container" data-aos="fade-up">
         
            <div style="height:680px; width:100%">
                <nav id="menu"></nav>
                <div id="map"></div>

            </div>

    </div>
 </section><!-- End Counts Section -->


   <!-- ======= Features Section ======= -->
    <section id="features" class="features">
      <div class="container">

          <div class="sectiondbu1-header">
          <h2>Các hợp phần hoạt động bom mìn</h2>          
        </div> 

        <div class="row">
          <div class="col-lg-3 mb-5 mb-lg-0" data-aos="fade-right">
            <ul class="nav nav-tabs flex-column">
              <li class="nav-item">
                <a class="nav-link active show" data-bs-toggle="tab" href="#tab-1">
                <h4><i class="bx bx-chevron-right"></i>@ViewLocalizer["Survey"]</h4>
 
                </a>
              </li>
              <li class="nav-item mt-2">
                <a class="nav-link" data-bs-toggle="tab" href="#tab-2">
                  <h4><i class="bx bx-chevron-right"></i>@ViewLocalizer["Clearance"]</h4>
             
                </a>
              </li>
              <li class="nav-item mt-2">
                <a class="nav-link" data-bs-toggle="tab" href="#tab-3">
                  <h4>  <i class="bx bx-chevron-right"></i>@ViewLocalizer["AccidentsVictims"]</h4>
               
                </a>
              </li>
              <li class="nav-item mt-2">
                <a class="nav-link" data-bs-toggle="tab" href="#tab-4">
                  <h4>  <i class="bx bx-chevron-right"></i> @ViewLocalizer["RiskEducation"]</h4>
         
                </a>
              </li>
               <li class="nav-item mt-2">
                <a class="nav-link" data-bs-toggle="tab" href="#tab-5">
                  <h4><i class="bx bx-chevron-right"></i>@ViewLocalizer["VictimsAssistance"]</h4>
       
                </a>
              </li>
               <li class="nav-item mt-2">
                <a class="nav-link" data-bs-toggle="tab" href="#tab-6">
                  <h4>  <i class="bx bx-chevron-right"></i>@ViewLocalizer["PostClearanceDevelopment"]</h4>
           
                </a>
              </li>
            </ul>
          </div>
          <div class="col-lg-9 ml-auto" data-aos="fade-left" data-aos-delay="100">
            <div class="tab-content">
              <div class="tab-pane active show" id="tab-1">
                   <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0" data-aos="fade-up" data-aos-delay="100">
                        <h3>@ViewLocalizer["tabs1s"]</h3>
                        <p>
                            @ViewLocalizer["tabs1"]
                        </p>
                        <a asp-area="" asp-controller="DataFigures" asp-action="ByMineActionSurvey" >@ViewLocalizer["GoMore"]</a>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center" data-aos="fade-up" data-aos-delay="200">
                        <img src="~/images/card/maxresdefault.jpg" alt="" class="img-fluid">
                    </div>
                </div>
               
              </div>
              <div class="tab-pane" id="tab-2">
                <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs2s"]</h3>
                        <p>
                            @ViewLocalizer["tabs2"]
                        </p>
                        <a asp-area="" asp-controller="DataFigures" asp-action="ByMineActionClearance" >@ViewLocalizer["GoMore"]</a>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/ra-pha-bom-min.jpg" alt="" class="img-fluid">
                    </div>
                </div>
              </div>
              <div class="tab-pane" id="tab-3">
                 <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs3s"]</h3>
                        <p>

                        </p>

                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/victim.jpg" alt="" class="img-fluid">
                    </div>
                </div>
              </div>
              <div class="tab-pane" id="tab-4">
                 <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs4s"]</h3>
                        <p>
                            @ViewLocalizer["tabs4"]
                        </p>
                        <a asp-area="" asp-controller="DataFigures" asp-action="ByMineActionMRE">@ViewLocalizer["GoMore"]</a>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/GDbom_min.jpg" alt="" class="img-fluid">
                    </div>
                </div>
              </div>
                <div class="tab-pane" id="tab-5">
                <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs5s"]</h3>
                        <p>
                            @ViewLocalizer["tabs5"]
                        </p>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/hotro.jpg" alt="" class="img-fluid">
                    </div>
                </div>
              </div>
                <div class="tab-pane" id="tab-6">
               <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs6s"]</h3>
                        <p>
                            @ViewLocalizer["tabs6"]
                        </p>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/saurapha.jpg" alt="" class="img-fluid">
                    </div>
                </div>
              </div>
            </div>
          </div>
        </div>

      </div>
    </section><!-- End Features Section -->

       <!-- ======= Portfolio Section ======= -->
    <section id="portfolio" class="portfolio">
      <div class="container">
         <div class="sectiondbu1-header">
          <h2>HÌNH ẢNH HOẠT ĐỘNG KHẮC PHỤC HẬU QUẢ BOM MÌN</h2>          
        </div> 

        <div class="row" data-aos="fade-up">
          <div class="col-lg-12 d-flex justify-content-center">
            <ul id="portfolio-flters">
              <li data-filter=".filter-act" class="filter-active">Hiện trường</li> 
              <li data-filter=".filter-edu">Đào tạo</li>
              <li data-filter=".filter-event">Sự kiện</li>
            </ul>
          </div>
        </div>

        <div class="row portfolio-container" data-aos="fade-up">

       
          <div class="col-lg-4 col-md-6 portfolio-item filter-act"> 
             <img src="~/images/portfolio/IMGP0357.jpg" class="img-fluid" alt="">
            <div class="portfolio-info">
              <h4>Hiện trường - DBCU & PTVN khảo sát hiện trường</h4>
           <a href="~/images/portfolio/IMGP0357.jpg" data-gallery="portfolioGallery" class="portfolio-lightbox preview-link" title=Hiện trường"><i class="bx bx-plus"></i></a>
 
     
            </div>
          </div>

          <div class="col-lg-4 col-md-6 portfolio-item filter-act"> 
            <img src="~/images/portfolio/IMGP0365.jpg" class="img-fluid" alt="">
            <div class="portfolio-info">
                  <h4>Hiện trường - DBCU & PTVN khảo sát hiện trường</h4>
         
            <a href="~/images/portfolio/IMGP0365.jpg" data-gall="portfolioGallery" class="portfolio-lightbox preview-link" title="Hiện trường"><i class="bx bx-plus"></i></a>
     
            </div>
          </div>

            <div class="col-lg-4 col-md-6 portfolio-item filter-act"> 
            <img src="~/images/portfolio/IMGP0328.jpg" class="img-fluid" alt="">
            <div class="portfolio-info">
                  <h4>Hiện trường - DBCU & PTVN khảo sát hiện trường</h4>
         
            <a href="~/images/portfolio/IMGP0328.JPG" data-gall="portfolioGallery"  class="portfolio-lightbox preview-link" title="Hiện trường"><i class="bx bx-plus"></i></a>
     
            </div>
          </div>

           <div class="col-lg-4 col-md-6 portfolio-item filter-act"> 
            <img src="~/images/portfolio/IMGP1117.JPG" class="img-fluid" alt="">
            <div class="portfolio-info">
                  <h4>Hiện trường - DBCU Chấm điểm CHA</h4>
         
            <a href="~/images/portfolio/IMGP1117.JPG" data-gall="portfolioGallery"  class="portfolio-lightbox preview-link" title="Hiện trường"><i class="bx bx-plus"></i></a>
     
            </div>
          </div>

             <div class="col-lg-4 col-md-6 portfolio-item filter-act"> 
            <img src="~/images/portfolio/IMGP1118.JPG" class="img-fluid" alt="">
            <div class="portfolio-info">
                  <h4>Hiện trường - DBCU Chấm điểm CHA</h4>
         
            <a href="~/images/portfolio/IMGP1118.JPG" data-gall="portfolioGallery"  class="portfolio-lightbox preview-link" title="Hiện trường"><i class="bx bx-plus"></i></a>
     
            </div>
          </div>
               
          <div class="col-lg-4 col-md-6 portfolio-item filter-act"> 
            <img src="~/images/portfolio/IMGP1122.JPG" class="img-fluid" alt="">
            <div class="portfolio-info">
                  <h4>Hiện trường - DBCU Chấm điểm CHA</h4>
         
            <a href="~/images/portfolio/IMGP1122.JPG" data-gall="portfolioGallery"  class="portfolio-lightbox preview-link" title="Hiện trường"><i class="bx bx-plus"></i></a>
     
            </div>
          </div>

             <div class="col-lg-4 col-md-6 portfolio-item filter-edu">
            <img src="~/images/portfolio/Picture11.jpg" class="img-fluid" alt="">
            <div class="portfolio-info">
              <h4>Đào tạo - Phát chứng chỉ IMSMA</h4>      
              <a href="~/images/portfolio/Picture11.jpg" data-gallery="portfolioGallery" class="portfolio-lightbox preview-link" title="Đào tạo"><i class="bx bx-plus"></i></a>
              
            </div>
          </div>

          
          <div class="col-lg-4 col-md-6 portfolio-item filter-edu">
            <img src="~/images/portfolio/Picture3.jpg" class="img-fluid" alt="">
            <div class="portfolio-info">
              <h4>Đào tạo -  IMSMA</h4>      
              <a href="~/images/portfolio/Picture3.jpg" data-gallery="portfolioGallery" class="portfolio-lightbox preview-link" title="Đào tạo"><i class="bx bx-plus"></i></a>
              
            </div>
          </div>
          
          <div class="col-lg-4 col-md-6 portfolio-item filter-edu">
            <img src="~/images/portfolio/Picture4.jpg" class="img-fluid" alt="">
            <div class="portfolio-info">
              <h4>Đào tạo - IMSMA</h4>      
              <a href="~/images/portfolio/Picture4.jpg" data-gallery="portfolioGallery" class="portfolio-lightbox preview-link" title="Đào tạo"><i class="bx bx-plus"></i></a>
              
            </div>
          </div>


        </div>

      </div>
    </section><!-- End Portfolio Section -->


<!-- ======= donor Section ======= -->
<section id="donor" class="donor">
<div class="container" data-aos="fade-up">
       <div class="sectiondbu1-header">
          <h2>@ViewLocalizer["Donors"]</h2>        
          <p> Trân trọng cảm ơn các nhà tài trợ và đối tác đã hỗ trợ cho hoạt động khắc phục hậu quả bom mìn vật nổ sau chiến tranh tại Quảng Bình.</p>
        </div> 

    <div class="section-title">
         <a title="@ViewLocalizer["Department of State"]" data-toggle="tooltip" href="https://www.state.gov" target="_blank"><img src="~/images/icon/Logo_US_DoS.png"></a>
                  
    </div>
		 
	<!-- ======= Clients Section ======= -->
	<div id="clients" class="clients">
		<div class="container" data-aos="zoom-in">

		<div class="clients-slider swiper">
			<div class="swiper-wrapper align-items-center">
			<div class="swiper-slide"> <a title="@ViewLocalizer["QBDOFA"]" data-toggle="tooltip" href="https://sngv.thuathienhue.gov.vn/" target="_blank"><img src="~/images/icon/logo_dofaHue.jpg"></a></div>
			<div class="swiper-slide">  <a title="@ViewLocalizer["QBPPM"]" data-toggle="tooltip" href="" target="_blank"><img src="~/images/icon/logo_PMCTTH.jpg"></a></div>
			<div class="swiper-slide">  <a title="@ViewLocalizer["VNMAC"]" data-toggle="tooltip" href="http://vnmac.gov.vn" target="_blank"><img src="~/images/icon/Logo VNMAC.png"></a></div>
			<div class="swiper-slide"> <a title="@ViewLocalizer["NPA"]" data-toggle="tooltip" href="https://www.npaid.org" target="_blank"><img src="~/images/icon/Logo NPA.png"></a></div>
			<div class="swiper-slide">  <a title="@ViewLocalizer["MAG"]" data-toggle="tooltip" href="https://www.maginternational.org" target="_blank"><img src="~/images/icon/Logo MAG.png"></a></div>
			<div class="swiper-slide">  <a title="@ViewLocalizer["PTVN"]" data-toggle="tooltip" href="https://www.peacetreesvietnam.org" target="_blank"><img src="~/images/icon/Logo PTVN.png"></a></div>
			<div class="swiper-slide">  <a title="@ViewLocalizer["UNDP"]" data-toggle="tooltip" href="https://www.vn.undp.org/content/vietnam/vi/home.html" target="_blank"><img src="~/images/icon/Logo UNDP.png"></a></div>
			<div class="swiper-slide"> <a title="@ViewLocalizer["KOICA"]" data-toggle="tooltip" href="http://www.koica.go.kr/sites/koica_en/index.do" target="_blank"><img src="~/images/icon/Logo KOICA.png"></a></div>
			<div class="swiper-slide"> <a title="@ViewLocalizer["CRD VietNam"]" data-toggle="tooltip" href="https://www.crs.org/our-work-overseas/where-we-work/vietnam" target="_blank"><img src="~/images/icon/CRS-logo.jpg"></a></div>
			<div class="swiper-slide">    <a title="@ViewLocalizer["CTD"]" data-toggle="tooltip" href="http://hoichuthapdoquangbinh.gov.vn" target="_blank"><img src="~/images/icon/Logo CTD.png"></a></div>

			</div>
			<div class="swiper-pagination"></div>
		</div>

		</div>
	</div><!-- End Clients Section -->
 
		 
</div>
</section><!-- End About Us Section -->
	
 

@section Scripts {
    <script>
        // TO MAKE THE MAP APPEAR YOU MUST
        // ADD YOUR ACCESS TOKEN FROM
        // https://account.mapbox.com
        mapboxgl.accessToken = 'pk.eyJ1IjoiaG9hbmMxOTgxIiwiYSI6ImNram95YW9uYzB0M24yd3BlbXVkOWNmN3QifQ.Z681DzM2rasHXmZKEcyYbQ';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/satellite-streets-v11',
            center: [107.445727, 16.416443],
            zoom: 9
        });

        map.addControl(new mapboxgl.FullscreenControl());
        map.addControl(new mapboxgl.NavigationControl());
        var geojson =  @Html.Raw(ViewData["lstGeoClearance"]);
        var geojsonCHA =  @Html.Raw(ViewData["lstGeoCHA"]);
        var geojsonCHAOpen =  @Html.Raw(ViewData["lstGeoCHAOpen"]);
        var geojsonCHASuspend =  @Html.Raw(ViewData["lstGeoCHASuspended"]);
        var geojsonCHAOngoing =  @Html.Raw(ViewData["lstGeoCHAOngoing"]);
        var geojsonCHACompleted =  @Html.Raw(ViewData["lstGeoCHACompleted"]);

        let hoveredStateId = null;
    
        map.on('load', function () {
            map.resize();

            // Add a data source containing GeoJSON data.
            map.addSource('maine', {
                'type': 'geojson',
                'data': geojson
            });

            map.addSource('chapolygonTitle', {
                'type': 'geojson',
                'data': geojsonCHA
            });

            map.addSource('chapolygon', {
                'type': 'geojson',
                'data': geojsonCHAOpen
            });

            map.addSource('chapolygonSuspend', {
                'type': 'geojson',
                'data': geojsonCHASuspend
            });

            map.addSource('chapolygonOngoing', {
                'type': 'geojson',
                'data': geojsonCHAOngoing
            });

            map.addSource('chapolygonCompleted', {
                'type': 'geojson',
                'data': geojsonCHACompleted
            });


            // Add a new layer to visualize the polygon - CHA.
            map.addLayer({
                'id': 'chapolygon-layer',
                'type': 'fill',
                'source': 'chapolygon', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#FC0602', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'chapolygon-outline',
                'type': 'line',
                'source': 'chapolygon',
                'layout': {

                },
                'paint': {
                    'line-color': '#FC0703',
                    'line-width': 2
                }
            });

            // Add a new layer to visualize the polygon - CHA Suspend.
            map.addLayer({
                'id': 'chapolygonSuspend-layer',
                'type': 'fill',
                'source': 'chapolygonSuspend', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#0373FC', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'chapolygonSuspend-outline',
                'type': 'line',
                'source': 'chapolygonSuspend',
                'layout': {

                },
                'paint': {
                    'line-color': '#0000FF',
                    'line-width': 2
                }
            });

            // Add a new layer to visualize the polygon - CHA Ongoing.
            map.addLayer({
                'id': 'chapolygonOngoing-layer',
                'type': 'fill',
                'source': 'chapolygonOngoing', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#FC0602', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'chapolygonOngoing-outline',
                'type': 'line',
                'source': 'chapolygonOngoing',
                'layout': {

                },
                'paint': {
                    'line-color': '#13FC03',
                    'line-width': 2
                }
            });

            // Add a new layer to visualize the polygon - CHA Completed.
            map.addLayer({
                'id': 'chapolygonCompleted-layer',
                'type': 'fill',
                'source': 'chapolygonCompleted', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#A2FC03', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'chapolygonCompleted-outline',
                'type': 'line',
                'source': 'chapolygonCompleted',
                'layout': {

                },
                'paint': {
                    'line-color': '#057906', 
                    'line-width': 2
                }
            });

            // Add a new layer to visualize the polygon - CLC.
            map.addLayer({
                'id': 'maine',
                'type': 'fill',
                'source': 'maine', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#1AFF00', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
                
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'outline',
                'type': 'line',
                'source': 'maine',
                'layout': {
                    'text-field': ['get', 'lr_id'],
                    'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],
                    'text-offset': [0, 0.6],
                    'text-anchor': 'top'
                },
                'paint': {
                    'line-color': '#0E8801',
                    'line-width': 2
                }
            });

             // Add a title.
            map.addLayer({
                'id': 'Title-CLC',
                'type': 'symbol',
                'source': 'maine',
                'layout': {
                    'text-field': ['get', 'lr_name'],
                    "text-size": 11,
                    "text-transform": "uppercase",
                    "text-letter-spacing": 0.05,
                    "text-offset": [0, 1.5],
                    'text-justify': 'auto',
                    'text-anchor': 'top'
                },
                 paint: {
                    //"text-color": "#ffffff"
                     "text-color": "#000",
                     "text-halo-color": "#fff",
                     "text-halo-width": 1
                }
            });


            map.addLayer({
                'id': 'Title-CHA',
                'type': 'symbol',
                'source': 'chapolygonTitle',
                'layout': {
                    'text-field': ['get', 'lr_name'],
                    "text-size": 11,
                    "text-transform": "uppercase",
                    "text-letter-spacing": 0.05,
                    "text-offset": [0, 1.5],
                    'text-justify': 'auto',
                    'text-anchor': 'top'
                },
                paint: {
                    //"text-color": "#ffffff"
                    "text-color": "#000",
                    "text-halo-color": "#fff",
                    "text-halo-width": 1
                }
            });
               
           
            // When the user moves their mouse over the state-fill layer, we'll update the
            // feature state for the feature under the mouse.
            map.on('mousemove', 'maine', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'maine', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'maine', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'maine', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'maine', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });

            //////////////////////////////////////////////////////////////////////////////////////////////
            // When the user moves their mouse over the state-fill layer, we'll update the  --- CHA OPEN
            // feature state for the feature under the mouse.
            map.on('mousemove', 'chapolygon-layer', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'chapolygon', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'chapolygon', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'chapolygon-layer', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'chapolygon', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });

            //////////////////////////////////////////////////////////////////////////////////////////////
            // When the user moves their mouse over the state-fill layer, we'll update the  --- CHA Suspended
            // feature state for the feature under the mouse.
            map.on('mousemove', 'chapolygonSuspend-layer', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'chapolygonSuspend', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'chapolygonSuspend', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'chapolygonSuspend-layer', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'chapolygonSuspend', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });

            //////////////////////////////////////////////////////////////////////////////////////////////
            // When the user moves their mouse over the state-fill layer, we'll update the  --- CHA chapolygonOngoing
            // feature state for the feature under the mouse.
            map.on('mousemove', 'chapolygonOngoing-layer', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'chapolygonOngoing', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'chapolygonOngoing', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'chapolygonOngoing-layer', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'chapolygonOngoing', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });

            //////////////////////////////////////////////////////////////////////////////////////////////
            // When the user moves their mouse over the state-fill layer, we'll update the  --- CHA chapolygonCompleted
            // feature state for the feature under the mouse.
            map.on('mousemove', 'chapolygonCompleted-layer', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'chapolygonCompleted', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'chapolygonCompleted', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'chapolygonCompleted-layer', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'chapolygonCompleted', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });



            // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'maine', function (e) {

                
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '
                        + '<table  class="table-bordered table">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_id + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["ClcLr_ID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                          + '<tr><td class="text-center" > @ViewLocalizer["ClcReporting_org_name"]</td> <td class="text-center" >' + e.features[0].properties.reporting_org_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcReporting_team"]</td> <td class="text-center" >' + e.features[0].properties.reporting_team + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStartdate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcEnddate"]</td> <td class="text-center" >' + e.features[0].properties.enddate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                          + '</table>'
                        +'</div>'
                    )
                    .addTo(map);
            });


             // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'chapolygon-layer', function (e) {
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '

                        +'<table  class="table-bordered ">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_name + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["CHAID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                        + '<tr><td class="text-center" > @ViewLocalizer["CHAName"]</td> <td class="text-center" >' + e.features[0].properties.lr_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAStartDate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAComment_Land_Use"]</td> <td class="text-center" >' + e.features[0].properties.comment_Land_Use + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHATypeArea"]</td> <td class="text-center" >' + e.features[0].properties.type_of_Area + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASlopee"]</td> <td class="text-center" >' + e.features[0].properties.slopee + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetation"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_Type + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetationDensity"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_density + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilType"]</td> <td class="text-center" >' + e.features[0].properties.soiltype + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilCondition"]</td> <td class="text-center" >' + e.features[0].properties.soil_Condition + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHADescription"]</td> <td class="text-center" >' + e.features[0].properties.additional_Information + '</td></tr>'

                        + '</table>'
                        + '</div>'
                    )
                    .addTo(map);
            });

               // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'chapolygonSuspend-layer', function (e) {
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '

                        +'<table  class="table-bordered ">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_name + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["CHAID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                        + '<tr><td class="text-center" > @ViewLocalizer["CHAName"]</td> <td class="text-center" >' + e.features[0].properties.lr_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAStartDate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAComment_Land_Use"]</td> <td class="text-center" >' + e.features[0].properties.comment_Land_Use + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHATypeArea"]</td> <td class="text-center" >' + e.features[0].properties.type_of_Area + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASlopee"]</td> <td class="text-center" >' + e.features[0].properties.slopee + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetation"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_Type + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetationDensity"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_density + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilType"]</td> <td class="text-center" >' + e.features[0].properties.soiltype + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilCondition"]</td> <td class="text-center" >' + e.features[0].properties.soil_Condition + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHADescription"]</td> <td class="text-center" >' + e.features[0].properties.additional_Information + '</td></tr>'

                        + '</table>'
                        + '</div>'
                    )
                    .addTo(map);
            });   // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'chapolygonCompleted-layer', function (e) {
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '

                        +'<table  class="table-bordered ">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_name + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["CHAID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                        + '<tr><td class="text-center" > @ViewLocalizer["CHAName"]</td> <td class="text-center" >' + e.features[0].properties.lr_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAStartDate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAComment_Land_Use"]</td> <td class="text-center" >' + e.features[0].properties.comment_Land_Use + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHATypeArea"]</td> <td class="text-center" >' + e.features[0].properties.type_of_Area + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASlopee"]</td> <td class="text-center" >' + e.features[0].properties.slopee + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetation"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_Type + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetationDensity"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_density + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilType"]</td> <td class="text-center" >' + e.features[0].properties.soiltype + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilCondition"]</td> <td class="text-center" >' + e.features[0].properties.soil_Condition + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHADescription"]</td> <td class="text-center" >' + e.features[0].properties.additional_Information + '</td></tr>'

                        + '</table>'
                        + '</div>'
                    )
                    .addTo(map);
            });   // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'chapolygonOngoing-layer', function (e) {
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '

                        +'<table  class="table-bordered ">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_name + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["CHAID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                        + '<tr><td class="text-center" > @ViewLocalizer["CHAName"]</td> <td class="text-center" >' + e.features[0].properties.lr_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAStartDate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAComment_Land_Use"]</td> <td class="text-center" >' + e.features[0].properties.comment_Land_Use + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHATypeArea"]</td> <td class="text-center" >' + e.features[0].properties.type_of_Area + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASlopee"]</td> <td class="text-center" >' + e.features[0].properties.slopee + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetation"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_Type + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetationDensity"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_density + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilType"]</td> <td class="text-center" >' + e.features[0].properties.soiltype + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilCondition"]</td> <td class="text-center" >' + e.features[0].properties.soil_Condition + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHADescription"]</td> <td class="text-center" >' + e.features[0].properties.additional_Information + '</td></tr>'

                        + '</table>'
                        + '</div>'
                    )
                    .addTo(map);
            });
        });




        map.on('idle', () => {
            // If these two layers were not added to the map, abort
            if (!map.getLayer('Title-CLC') || !map.getLayer( 'Title-CHA')) {
                return;
            }

            // Enumerate ids of the layers.
            const toggleableLayerIds = ['Title-CLC','Title-CHA'];

            // Set up the corresponding toggle button for each layer.
            for (const id of toggleableLayerIds) {
                // Skip layers that already have a button set up.
                if (document.getElementById(id)) {
                    continue;
                }

                // Create a link.
                const link = document.createElement('a');
                link.id = id;
                link.href = '#';
                link.textContent = id;
                link.className = 'active';

                // Show or hide layer when the toggle is clicked.
                link.onclick = function (e) {
                    const clickedLayer = this.textContent;
                    e.preventDefault();
                    e.stopPropagation();

                    const visibility = map.getLayoutProperty(
                        clickedLayer,
                        'visibility'
                    );

                    // Toggle layer visibility by changing the layout object's visibility property.
                    if (visibility === 'visible') {
                        map.setLayoutProperty(clickedLayer, 'visibility', 'none');
                        this.className = '';
                    } else {
                        this.className = 'active';
                        map.setLayoutProperty(
                            clickedLayer,
                            'visibility',
                            'visible'
                        );
                    }
                };

                const layers = document.getElementById('menu');
                layers.appendChild(link);
            }
        });
    </script>
}