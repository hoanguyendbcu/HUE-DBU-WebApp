@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer ViewLocalizer

@{
    var CurrentNumberFormat = new System.Globalization.CultureInfo("en-US");
    ViewData["Title"] = "Quang Binh DBCU - " + ViewLocalizer["Home"].Value;
}


<script src="https://api.mapbox.com/mapbox-gl-js/v2.0.1/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v2.0.1/mapbox-gl.css" rel="stylesheet" />


<style>
    body {
        margin: 0;
        padding: 0;
    }

    #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
    }

    #menu {
        background: #fff;
        position: absolute;
        z-index: 1;
        top: 10px;
        right: 10px;
        border-radius: 3px;
        width: 120px;
        border: 1px solid rgba(0, 0, 0, 0.4);
        font-family: 'Open Sans', sans-serif;
    }

        #menu a {
            font-size: 11px;
            color: #404040;
            display: block;
            margin: 0;
            padding: 0;
            padding: 5px;
            text-decoration: none;
            border-bottom: 1px solid rgba(0, 0, 0, 0.25);
            text-align: center;
        }

            #menu a:last-child {
                border: none;
            }

            #menu a:hover {
                background-color: #f8f8f8;
                color: #404040;
            }

            #menu a.active {
                background-color: #3887be;
                color: #ffffff;
            }

                #menu a.active:hover {
                    background: #3074a4;
                }
    
</style>

<!-- ======= Hero Section ======= -->
<section id="herotop" class="d-flex align-items-center">

    <div class="container-fluid" data-aos="zoom-out" data-aos-delay="100">
        <div class="row justify-content-center">
            <div class="col-xl-9">
                <div class="row">
                    <div class="col-xl-8">
                        <h1>@ViewLocalizer["lblHeroTop1"]</h1>
                        <h2>@ViewLocalizer["lblHeroTop2"]</h2>
                        @*<a href="#about" class="btn-get-started scrollto">Get Started</a>*@
                    </div>
                </div>
            </div>
        </div>
    </div>

</section><!-- End Hero -->




<section id="hero" class="hero">

    <div class="container">

        <div class="section-title">
            <h2>@ViewLocalizer["lblMineActionQB"]</h2>
        </div>
        <div class="row">

            <!-- seo fact area start -->
            <!--<div class="col-lg-12 ">
            <div class="row">
                <div class="col-md-3 mt-5 mb-3">
                    <div class="card">

                        <div class="seo-fact sbg1">
                            <div class="p-4 d-flex justify-content-between align-items-center">
                                <div class="seofct-icon">@ViewLocalizer["LabelEOD"] </div>
                                <h2> @ViewData["missonEOD"]</h2>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mt-5 mb-3">
                    <div class="card">
                        <div class="seo-fact sbg2">
                            <div class="p-4 d-flex justify-content-between align-items-center">
                                <div class="seofct-icon">@ViewLocalizer["LabelNTS"]</div>
                                <h2>@ViewData["missonNTS"]</h2>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mt-5 mb-3">
                    <div class="card">
                        <div class="seo-fact sbg3">
                            <div class="p-4 d-flex justify-content-between align-items-center">
                                <div class="seofct-icon">@ViewLocalizer["LabelTS"]</div>
                                <h2>@ViewData["missonTS"]</h2>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mt-5 mb-3">
                    <div class="card">
                        <div class="seo-fact sbg4">
                            <div class="p-4 d-flex justify-content-between align-items-center">
                                <div class="seofct-icon">@ViewLocalizer["LabelCLC"]</div>
                                <h2>@ViewData["missonCLC"]</h2>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>-->
            <!-- seo fact area end -->
            <!-- Approach -->
            <div class="col-lg-4 mt-1">
                <div class="card card-bordered">

                    <div class="card-body">
                        <h5 class="mb-0 font-weight-bold">@ViewLocalizer["String1"]</h5>
                        <p class="mb-0">
                            @ViewLocalizer["String2"]
                        </p>
                        <p class="mb-0">
                            + 3.179 ha @ViewLocalizer["String3"]
                        </p>
                        <p class="mb-0">
                            - @ViewLocalizer["String4"] 170 ha
                        </p>
                        <p class="mb-0">
                            - MAG 1.566 ha
                        </p>
                        <p class="mb-0">
                            - KOICA 1.443 ha
                        </p>
                        <p class="mb-0">
                            - 28.194 @ViewLocalizer["String5"]
                        </p>

                    </div>
                    <canvas id="seolinechart8" height="233"></canvas>
                </div>
            </div>

            <!-- timeline area end -->

            <div class="col-lg-8 mt-1">
                
                        <!--<h4 class="m-0 font-weight-bold">@ViewLocalizer["String6"]</h4>-->
                        @*<div id="ambarchart1"></div>*@
                        <!--<div id="socialads"></div>-->

                  
                            <div style="height:480px; width:100%;" class="col-lg-12">
                                <nav id="menu"></nav>
                                <div id="map"></div>

                            </div>
                    
                   
            </div>
        </div>
    </div>
</section><!-- End Hero -->

@*<section id="contact" class="contact">
    <div class="container" data-aos="fade-up">



        <div class="row">
            <div style="height:600px; width:100%;" class="col-lg-12">
                <nav id="menu"></nav>
                <div id="map"></div>

            </div>
        </div>

    </div>

</section>*@
<!-- End About Section -->
<!-- ======= Counts Section ======= -->
<section id="counts" class="counts">
    <div class="container" data-aos="fade-up">
        <div class="row">
            <div class="col-lg-3 col-md-2">
                <div class="count-box">
                    @*<i class="icofont-exclamation-tringle"> </i>*@
                    <i><img src="~/images/icon-web/images1.png" /> </i>
                    <span data-toggle="counter-up"> @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["areaCHA"])</span>(m2)
                    <p>@ViewLocalizer["String7"]</p>
                </div>
            </div>

            <div class="col-lg-3 col-md-2">
                <div class="count-box">
                    @*<i class="icofont-layout"></i>*@
                    <i><img src="~/images/icon-web/Clearance.jpg" /> </i>

                    <span data-toggle="counter-up">@string.Format(CurrentNumberFormat, "{0:N0}", ViewData["areaCLC"])</span> (m2)
                    <p>@ViewLocalizer["String8"]</p>
                </div>
            </div>

            <div class="col-lg-3 col-md-2">
                <div class="count-box">
                    @*<i class="icofont-record "></i>*@
                    <i><img src="~/images/icon-web/EOD.jpg" /> </i>
                    <span data-toggle="counter-up">   @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["missonEOD"])  </span>
                    <p> </p>
                    <p>@ViewLocalizer["String9"]</p>
                </div>
            </div>
            <div class="col-lg-3 col-md-2">
                <div class="count-box">
                    @*<i class="icofont-record "></i>*@
                    <i><img src="~/images/icon-web/UXO.jpg" /> </i>
                    <span data-toggle="counter-up">   @string.Format(CurrentNumberFormat, "{0:N0}", ViewData["NoERW"])  </span>
                    <p></p>
                    <p>@ViewLocalizer["String10"]</p>
                </div>
            </div>

            @*<div class="col-lg-3 col-md-2">
                    <div class="count-box">
                        <i class="icofont-users-alt-5"></i>
                        <span data-toggle="counter-up"></span>
                        <p>@ViewLocalizer["String10"]</p>
                    </div>
                </div>*@


        </div>

    </div>
</section><!-- End Counts Section -->
<!-- ======= Tabs Section ======= -->
<section id="tabs" class="tabs">
    <div class="container" data-aos="fade-up">

        <ul class="nav nav-tabs row d-flex">

            <li class="nav-item col-2">
                <a class="nav-link active show" data-toggle="tab" href="#tab-1">
                    <img src="~/images/icon-web/i3.jpg" />&nbsp;&nbsp;
                    <h6 class="d-none d-lg-block">@ViewLocalizer["Survey"]</h6>
                  
                </a>
            </li>
            <li class="nav-item col-2">
                <a class="nav-link" data-toggle="tab" href="#tab-2">
                    <img src="~/images/icon-web/i6.jpg" />&nbsp;&nbsp;
                    <h6 class="d-none d-lg-block">@ViewLocalizer["Clearance"]</h6>

                </a>
            </li>
            <li class="nav-item col-2">
                <a class="nav-link" data-toggle="tab" href="#tab-3">
                    <img src="~/images/icon-web/i1.jpg" />&nbsp;
                    <h6 class="d-none d-lg-block">
                        @ViewLocalizer["AccidentsVictims"]
                    </h6>
                </a>
            </li>
            <li class="nav-item col-2">
                <a class="nav-link" data-toggle="tab" href="#tab-4">
                    <img src="~/images/icon-web/i4.jpg" />&nbsp;&nbsp;
                    <h6 class="d-none d-lg-block">  @ViewLocalizer["RiskEducation"]</h6>
                </a>
            </li>
            <li class="nav-item col-2">
                <a class="nav-link" data-toggle="tab" href="#tab-5">
                    <img src="~/images/icon-web/i5.jpg" />&nbsp;
                    <h6 class="d-none d-lg-block">@ViewLocalizer["VictimsAssistance"]</h6>
                </a>
            </li>

            <li class="nav-item col-2">
                <a class="nav-link" data-toggle="tab" href="#tab-6">
                    <img src="~/images/icon-web/i2.jpg" />&nbsp;
                    <h6 class="d-none d-lg-block">@ViewLocalizer["PostClearanceDevelopment"]</h6>
                </a>
            </li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active show" id="tab-1">
                <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0" data-aos="fade-up" data-aos-delay="100">
                        <h3>@ViewLocalizer["tabs1s"]</h3>
                        <p>
                            @ViewLocalizer["tabs1"]
                        </p>
                        <a asp-area="" asp-controller="DataFigures" asp-action="ByMineActionSurvey" class="btn btn-outline-success">@ViewLocalizer["GoMore"]</a>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center" data-aos="fade-up" data-aos-delay="200">
                        <img src="~/images/card/maxresdefault.jpg" alt="" class="img-fluid">
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="tab-2">
                <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs2s"]</h3>
                        <p>
                            @ViewLocalizer["tabs2"]
                        </p>
                        <a asp-area="" asp-controller="DataFigures" asp-action="ByMineActionClearance" class="btn btn-outline-success">@ViewLocalizer["GoMore"]</a>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/ra-pha-bom-min.jpg" alt="" class="img-fluid">
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="tab-3">
                <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs3s"]</h3>
                        <p>

                        </p>

                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/victim.jpg" alt="" class="img-fluid">
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="tab-4">
                <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs4s"]</h3>
                        <p>
                            @ViewLocalizer["tabs4"]
                        </p>
                        <a asp-area="" asp-controller="DataFigures" asp-action="ByMineActionMRE" class="btn btn-outline-success">@ViewLocalizer["GoMore"]</a>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/GDbom_min.jpg" alt="" class="img-fluid">
                    </div>
                </div>
            </div>

            <div class="tab-pane" id="tab-5">
                <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs5s"]</h3>
                        <p>
                            @ViewLocalizer["tabs5"]
                        </p>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/hotro.jpg" alt="" class="img-fluid">
                    </div>
                </div>
            </div>

            <div class="tab-pane" id="tab-6">
                <div class="row">
                    <div class="col-lg-6 order-2 order-lg-1 mt-3 mt-lg-0">
                        <h3>@ViewLocalizer["tabs6s"]</h3>
                        <p>
                            @ViewLocalizer["tabs6"]
                        </p>
                    </div>
                    <div class="col-lg-6 order-1 order-lg-2 text-center">
                        <img src="~/images/card/saurapha.jpg" alt="" class="img-fluid">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br>
    <!-- ======= Contact Section ======= -->
    <div id="partners" class="partners">
        <div class="container">
            <div class="row">
                <div class="col-lg-4 footer-links">
                    <div class="row">
                        <div class="col-md-12 ">
                            <h5>@ViewLocalizer["Donors"]</h5>
                            <hr />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4 mt-1">
                            <div class="card text-center">
                                <a title="@ViewLocalizer["Department of State"]" data-toggle="tooltip" href="https://www.state.gov" target="_blank"><img src="~/images/icon/Logo_US_DoS.png"></a>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-8 footer-links">

                    <div class="row">
                        <div class="col-md-12">
                            <h5>@ViewLocalizer["Partners"]</h5>
                            <hr />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["QBDOFA"]" data-toggle="tooltip" href="https://sngv.quangbinh.gov.vn" target="_blank"><img src="~/images/icon/Logo DOFA.png"></a>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["QBPPM"]" data-toggle="tooltip" href="" target="_blank"><img src="~/images/icon/Logo QSQB.png"></a>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["VNMAC"]" data-toggle="tooltip" href="http://vnmac.gov.vn" target="_blank"><img src="~/images/icon/Logo VNMAC.png"></a>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["NPA"]" data-toggle="tooltip" href="https://www.npaid.org" target="_blank"><img src="~/images/icon/Logo NPA.png"></a>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["MAG"]" data-toggle="tooltip" href="https://www.maginternational.org" target="_blank"><img src="~/images/icon/Logo MAG.png"></a>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["PTVN"]" data-toggle="tooltip" href="https://www.peacetreesvietnam.org" target="_blank"><img src="~/images/icon/Logo PTVN.png"></a>
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["UNDP"]" data-toggle="tooltip" href="https://www.vn.undp.org/content/vietnam/vi/home.html" target="_blank"><img src="~/images/icon/Logo UNDP.png"></a>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["KOICA"]" data-toggle="tooltip" href="http://www.koica.go.kr/sites/koica_en/index.do" target="_blank"><img src="~/images/icon/Logo KOICA.png"></a>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["CRD VietNam"]" data-toggle="tooltip" href="https://www.crs.org/our-work-overseas/where-we-work/vietnam" target="_blank"><img src="~/images/icon/CRS-logo.jpg"></a>
                            </div>
                        </div>
                        <div class="col-md-2 mt-1 text-center">
                            <div class="card">
                                <a title="@ViewLocalizer["CTD"]" data-toggle="tooltip" href="http://hoichuthapdoquangbinh.gov.vn" target="_blank"><img src="~/images/icon/Logo CTD.png"></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div><!-- End Contact Section -->

</section><!-- End Tabs Section -->

@section Scripts {
    <script>
        // TO MAKE THE MAP APPEAR YOU MUST
        // ADD YOUR ACCESS TOKEN FROM
        // https://account.mapbox.com
        mapboxgl.accessToken = 'pk.eyJ1IjoiaG9hbmMxOTgxIiwiYSI6ImNram95YW9uYzB0M24yd3BlbXVkOWNmN3QifQ.Z681DzM2rasHXmZKEcyYbQ';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/satellite-streets-v11',
            center: [106.619344, 17.457754],
            zoom: 9
        });

        map.addControl(new mapboxgl.FullscreenControl());
        map.addControl(new mapboxgl.NavigationControl());
        var geojson =  @Html.Raw(ViewData["lstGeoClearance"]);
        var geojsonCHA =  @Html.Raw(ViewData["lstGeoCHA"]);
        var geojsonCHAOpen =  @Html.Raw(ViewData["lstGeoCHAOpen"]);
        var geojsonCHASuspend =  @Html.Raw(ViewData["lstGeoCHASuspended"]);
        var geojsonCHAOngoing =  @Html.Raw(ViewData["lstGeoCHAOngoing"]);
        var geojsonCHACompleted =  @Html.Raw(ViewData["lstGeoCHACompleted"]);

        let hoveredStateId = null;
    
        map.on('load', function () {
            map.resize();

            // Add a data source containing GeoJSON data.
            map.addSource('maine', {
                'type': 'geojson',
                'data': geojson
            });

            map.addSource('chapolygonTitle', {
                'type': 'geojson',
                'data': geojsonCHA
            });

            map.addSource('chapolygon', {
                'type': 'geojson',
                'data': geojsonCHAOpen
            });

            map.addSource('chapolygonSuspend', {
                'type': 'geojson',
                'data': geojsonCHASuspend
            });

            map.addSource('chapolygonOngoing', {
                'type': 'geojson',
                'data': geojsonCHAOngoing
            });

            map.addSource('chapolygonCompleted', {
                'type': 'geojson',
                'data': geojsonCHACompleted
            });


            // Add a new layer to visualize the polygon - CHA.
            map.addLayer({
                'id': 'chapolygon-layer',
                'type': 'fill',
                'source': 'chapolygon', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#FC0602', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'chapolygon-outline',
                'type': 'line',
                'source': 'chapolygon',
                'layout': {

                },
                'paint': {
                    'line-color': '#FC0703',
                    'line-width': 2
                }
            });

            // Add a new layer to visualize the polygon - CHA Suspend.
            map.addLayer({
                'id': 'chapolygonSuspend-layer',
                'type': 'fill',
                'source': 'chapolygonSuspend', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#0373FC', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'chapolygonSuspend-outline',
                'type': 'line',
                'source': 'chapolygonSuspend',
                'layout': {

                },
                'paint': {
                    'line-color': '#0000FF',
                    'line-width': 2
                }
            });

            // Add a new layer to visualize the polygon - CHA Ongoing.
            map.addLayer({
                'id': 'chapolygonOngoing-layer',
                'type': 'fill',
                'source': 'chapolygonOngoing', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#FC0602', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'chapolygonOngoing-outline',
                'type': 'line',
                'source': 'chapolygonOngoing',
                'layout': {

                },
                'paint': {
                    'line-color': '#13FC03',
                    'line-width': 2
                }
            });

            // Add a new layer to visualize the polygon - CHA Completed.
            map.addLayer({
                'id': 'chapolygonCompleted-layer',
                'type': 'fill',
                'source': 'chapolygonCompleted', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#A2FC03', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'chapolygonCompleted-outline',
                'type': 'line',
                'source': 'chapolygonCompleted',
                'layout': {

                },
                'paint': {
                    'line-color': '#057906', 
                    'line-width': 2
                }
            });

            // Add a new layer to visualize the polygon - CLC.
            map.addLayer({
                'id': 'maine',
                'type': 'fill',
                'source': 'maine', // reference the data source
                'layout': {
                },
                'paint': {
                    'fill-color': '#1AFF00', //  color fill
                    'fill-opacity': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        1,
                        0.5
                    ]
                }
                
            });
            // Add a black outline around the polygon.
            map.addLayer({
                'id': 'outline',
                'type': 'line',
                'source': 'maine',
                'layout': {
                    'text-field': ['get', 'lr_id'],
                    'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],
                    'text-offset': [0, 0.6],
                    'text-anchor': 'top'
                },
                'paint': {
                    'line-color': '#0E8801',
                    'line-width': 2
                }
            });

             // Add a title.
            map.addLayer({
                'id': 'Title-CLC',
                'type': 'symbol',
                'source': 'maine',
                'layout': {
                    'text-field': ['get', 'lr_name'],
                    "text-size": 11,
                    "text-transform": "uppercase",
                    "text-letter-spacing": 0.05,
                    "text-offset": [0, 1.5],
                    'text-justify': 'auto',
                    'text-anchor': 'top'
                },
                 paint: {
                    //"text-color": "#ffffff"
                     "text-color": "#000",
                     "text-halo-color": "#fff",
                     "text-halo-width": 1
                }
            });


            map.addLayer({
                'id': 'Title-CHA',
                'type': 'symbol',
                'source': 'chapolygonTitle',
                'layout': {
                    'text-field': ['get', 'lr_name'],
                    "text-size": 11,
                    "text-transform": "uppercase",
                    "text-letter-spacing": 0.05,
                    "text-offset": [0, 1.5],
                    'text-justify': 'auto',
                    'text-anchor': 'top'
                },
                paint: {
                    //"text-color": "#ffffff"
                    "text-color": "#000",
                    "text-halo-color": "#fff",
                    "text-halo-width": 1
                }
            });
               
           
            // When the user moves their mouse over the state-fill layer, we'll update the
            // feature state for the feature under the mouse.
            map.on('mousemove', 'maine', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'maine', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'maine', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'maine', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'maine', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });

            //////////////////////////////////////////////////////////////////////////////////////////////
            // When the user moves their mouse over the state-fill layer, we'll update the  --- CHA OPEN
            // feature state for the feature under the mouse.
            map.on('mousemove', 'chapolygon-layer', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'chapolygon', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'chapolygon', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'chapolygon-layer', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'chapolygon', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });

            //////////////////////////////////////////////////////////////////////////////////////////////
            // When the user moves their mouse over the state-fill layer, we'll update the  --- CHA Suspended
            // feature state for the feature under the mouse.
            map.on('mousemove', 'chapolygonSuspend-layer', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'chapolygonSuspend', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'chapolygonSuspend', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'chapolygonSuspend-layer', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'chapolygonSuspend', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });

            //////////////////////////////////////////////////////////////////////////////////////////////
            // When the user moves their mouse over the state-fill layer, we'll update the  --- CHA chapolygonOngoing
            // feature state for the feature under the mouse.
            map.on('mousemove', 'chapolygonOngoing-layer', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'chapolygonOngoing', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'chapolygonOngoing', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'chapolygonOngoing-layer', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'chapolygonOngoing', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });

            //////////////////////////////////////////////////////////////////////////////////////////////
            // When the user moves their mouse over the state-fill layer, we'll update the  --- CHA chapolygonCompleted
            // feature state for the feature under the mouse.
            map.on('mousemove', 'chapolygonCompleted-layer', (e) => {
                debugger
                if (e.features.length > 0) {
                    if (hoveredStateId !== null) {
                        map.setFeatureState(
                            { source: 'chapolygonCompleted', id: hoveredStateId },
                            { hover: false }
                        );
                    }
                    hoveredStateId = e.features[0].id;
                    map.setFeatureState(
                        { source: 'chapolygonCompleted', id: hoveredStateId },
                        { hover: true }
                    );
                }
            });

            // When the mouse leaves the state-fill layer, update the feature state of the
            // previously hovered feature.
            map.on('mouseleave', 'chapolygonCompleted-layer', () => {
                if (hoveredStateId !== null) {
                    map.setFeatureState(
                        { source: 'chapolygonCompleted', id: hoveredStateId },
                        { hover: false }
                    );
                }
                hoveredStateId = null;
            });



            // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'maine', function (e) {

                
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '
                        + '<table  class="table-bordered table">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_id + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["ClcLr_ID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                          + '<tr><td class="text-center" > @ViewLocalizer["ClcReporting_org_name"]</td> <td class="text-center" >' + e.features[0].properties.reporting_org_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcReporting_team"]</td> <td class="text-center" >' + e.features[0].properties.reporting_team + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStartdate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcEnddate"]</td> <td class="text-center" >' + e.features[0].properties.enddate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                          + '</table>'
                        +'</div>'
                    )
                    .addTo(map);
            });


             // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'chapolygon-layer', function (e) {
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '

                        +'<table  class="table-bordered ">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_name + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["CHAID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                        + '<tr><td class="text-center" > @ViewLocalizer["CHAName"]</td> <td class="text-center" >' + e.features[0].properties.lr_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAStartDate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAComment_Land_Use"]</td> <td class="text-center" >' + e.features[0].properties.comment_Land_Use + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHATypeArea"]</td> <td class="text-center" >' + e.features[0].properties.type_of_Area + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASlopee"]</td> <td class="text-center" >' + e.features[0].properties.slopee + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetation"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_Type + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetationDensity"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_density + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilType"]</td> <td class="text-center" >' + e.features[0].properties.soiltype + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilCondition"]</td> <td class="text-center" >' + e.features[0].properties.soil_Condition + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHADescription"]</td> <td class="text-center" >' + e.features[0].properties.additional_Information + '</td></tr>'

                        + '</table>'
                        + '</div>'
                    )
                    .addTo(map);
            });

               // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'chapolygonSuspend-layer', function (e) {
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '

                        +'<table  class="table-bordered ">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_name + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["CHAID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                        + '<tr><td class="text-center" > @ViewLocalizer["CHAName"]</td> <td class="text-center" >' + e.features[0].properties.lr_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAStartDate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAComment_Land_Use"]</td> <td class="text-center" >' + e.features[0].properties.comment_Land_Use + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHATypeArea"]</td> <td class="text-center" >' + e.features[0].properties.type_of_Area + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASlopee"]</td> <td class="text-center" >' + e.features[0].properties.slopee + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetation"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_Type + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetationDensity"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_density + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilType"]</td> <td class="text-center" >' + e.features[0].properties.soiltype + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilCondition"]</td> <td class="text-center" >' + e.features[0].properties.soil_Condition + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHADescription"]</td> <td class="text-center" >' + e.features[0].properties.additional_Information + '</td></tr>'

                        + '</table>'
                        + '</div>'
                    )
                    .addTo(map);
            });   // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'chapolygonCompleted-layer', function (e) {
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '

                        +'<table  class="table-bordered ">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_name + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["CHAID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                        + '<tr><td class="text-center" > @ViewLocalizer["CHAName"]</td> <td class="text-center" >' + e.features[0].properties.lr_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAStartDate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAComment_Land_Use"]</td> <td class="text-center" >' + e.features[0].properties.comment_Land_Use + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHATypeArea"]</td> <td class="text-center" >' + e.features[0].properties.type_of_Area + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASlopee"]</td> <td class="text-center" >' + e.features[0].properties.slopee + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetation"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_Type + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetationDensity"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_density + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilType"]</td> <td class="text-center" >' + e.features[0].properties.soiltype + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilCondition"]</td> <td class="text-center" >' + e.features[0].properties.soil_Condition + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHADescription"]</td> <td class="text-center" >' + e.features[0].properties.additional_Information + '</td></tr>'

                        + '</table>'
                        + '</div>'
                    )
                    .addTo(map);
            });   // When a click event occurs on a feature in the states layer, open a popup at the
            // location of the click, with description HTML from its properties.
            map.on('click', 'chapolygonOngoing-layer', function (e) {
                new mapboxgl.Popup()
                    .setLngLat(e.lngLat)
                    .setHTML(
                        '<div style="overflow-y: auto; max-height: 350px;"> '

                        +'<table  class="table-bordered ">'
                        + '<tr><th colspan="2"> ' + e.features[0].properties.lr_name + '</th> </tr>'

                        + '<tr><td class="text-center" > @ViewLocalizer["CHAID"]</td> <td class="text-center" >' + e.features[0].properties.lr_id + '</td></tr>'
                        + '<tr><td class="text-center" > @ViewLocalizer["CHAName"]</td> <td class="text-center" >' + e.features[0].properties.lr_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcStatus"]</td> <td class="text-center" >' + e.features[0].properties.status + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAStartDate"]</td> <td class="text-center" >' + e.features[0].properties.startdate + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAComment_Land_Use"]</td> <td class="text-center" >' + e.features[0].properties.comment_Land_Use + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHATypeArea"]</td> <td class="text-center" >' + e.features[0].properties.type_of_Area + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASlopee"]</td> <td class="text-center" >' + e.features[0].properties.slopee + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetation"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_Type + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHAVegetationDensity"]</td> <td class="text-center" >' + e.features[0].properties.vegetation_density + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilType"]</td> <td class="text-center" >' + e.features[0].properties.soiltype + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHASoilCondition"]</td> <td class="text-center" >' + e.features[0].properties.soil_Condition + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcAreasize"]</td> <td class="text-center" >' + Number(e.features[0].properties.areasize) + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["ClcLocation"]</td> <td class="text-center" >' + e.features[0].properties.district_name + ', ' + e.features[0].properties.commune_name + ', ' + e.features[0].properties.village_name + '</td></tr>'
                        + '<tr><td class="text-center"  > @ViewLocalizer["CHADescription"]</td> <td class="text-center" >' + e.features[0].properties.additional_Information + '</td></tr>'

                        + '</table>'
                        + '</div>'
                    )
                    .addTo(map);
            });
        });




        map.on('idle', () => {
            // If these two layers were not added to the map, abort
            if (!map.getLayer('Title-CLC') || !map.getLayer( 'Title-CHA')) {
                return;
            }

            // Enumerate ids of the layers.
            const toggleableLayerIds = ['Title-CLC','Title-CHA'];

            // Set up the corresponding toggle button for each layer.
            for (const id of toggleableLayerIds) {
                // Skip layers that already have a button set up.
                if (document.getElementById(id)) {
                    continue;
                }

                // Create a link.
                const link = document.createElement('a');
                link.id = id;
                link.href = '#';
                link.textContent = id;
                link.className = 'active';

                // Show or hide layer when the toggle is clicked.
                link.onclick = function (e) {
                    const clickedLayer = this.textContent;
                    e.preventDefault();
                    e.stopPropagation();

                    const visibility = map.getLayoutProperty(
                        clickedLayer,
                        'visibility'
                    );

                    // Toggle layer visibility by changing the layout object's visibility property.
                    if (visibility === 'visible') {
                        map.setLayoutProperty(clickedLayer, 'visibility', 'none');
                        this.className = '';
                    } else {
                        this.className = 'active';
                        map.setLayoutProperty(
                            clickedLayer,
                            'visibility',
                            'visible'
                        );
                    }
                };

                const layers = document.getElementById('menu');
                layers.appendChild(link);
            }
        });
    </script>
}